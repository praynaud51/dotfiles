" Do not assume compatibility with the old Vi
set nocompatible

set softtabstop=4
set paste

filetype on

"disable swap file
set noswapfile
set uc=0

":setlocal spell spelllang=en
setlocal spell spelllang=fr
set nospell

" Alert on screen (visual bell)
set vb

" Enable life in colors
syntax on
syn sync linebreaks=200
" For large files
set redrawtime=1000

" with 256 colors
"set t_Co=256
set term=xterm-256color

set termguicolors
"let g:solarized_termtrans=0
"let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
"let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"

" Displays the cursor postion
set ruler

" Max width
" '72' enable to wrap automatically on 72 caracters
" '0' disable this function
"set textwidth=78
set textwidth=0

"set colorcolumn=80
"set textwidth=79
set smartindent

" Number of columns
"set columns=80
" History of commands
set history=100
" Options of file  ~/.viminfo
set viminfo='20,\"50
" Enable Backspace
set backspace=2
" Allows the passage from one line to another with the left and right arrows
"set whichwrap=<,>,[,]
" Always keep a visible line on the screen above the cursor
set scrolloff=1
" Display the commands in the status bar
set showcmd
" Display the pair of brackets
set showmatch
" Try to keep the cursor in the same column when you change line
set nostartofline

set expandtab
set tabstop=4

" Searches are not 'case sensitive'
"set ignorecase
set ignorecase smartcase

" Folder splitting is based on indentation
set foldmethod=indent
" 12 levels indentation by default for folders
set foldlevel=12

" Don't use Ex mode, use Q for formatting
map Q gq

" Ciblage du curseur, lignes horizontal & vertical 
set cursorline
set cursorcolumn

" Hihlight all search results
set hlsearch

" Uncomment the following to have Vim jump to the last position when
" reopening a file
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

" Fold Asciidoc files at sections and using nested folds for subsections
" compute the folding level
function! AsciidocLevel()
    if getline(v:lnum) =~ '^== .*$'
        return ">1"
    endif
    if getline(v:lnum) =~ '^=== .*$'
        return ">2"
    endif
    if getline(v:lnum) =~ '^==== .*$'
        return ">3"
    endif
    if getline(v:lnum) =~ '^===== .*$'
        return ">4"
    endif
    if getline(v:lnum) =~ '^====== .*$'
        return ">5"
    endif
    if getline(v:lnum) =~ '^======= .*$'
        return ">6"
    endif
    return "="
endfunction

" run the folding level method when asciidoc is here
autocmd Syntax asciidoc setlocal foldexpr=AsciidocLevel()
"" enable folding method: expression on asciidoc
autocmd filetype asciidoc setlocal foldmethod=expr
" start with text unfolded all the way
autocmd BufRead *.adoc normal zR
autocmd BufRead *.asciidoc normal zR

set number
set number relativenumber

set modelines=0
set nomodeline

set undolevels=100      " use many muchos levels of undo
set wildignore=*.swp,*.bak,*.pyc,*.class
set title                " change the terminal's title

" Don't screw up folds when inserting text that might affect them, until
" leaving insert mode. Foldmethod is local to the window.
autocmd InsertEnter * let w:last_fdm=&foldmethod | setlocal foldmethod=manual
autocmd InsertLeave * let &l:foldmethod=w:last_fdm

" Select text and type \y to send it to xclip
"vnoremap <silent><Leader>y "yy <Bar> :call system('xclip', @y)<CR>
" Select text and type y to send it to xclip
vnoremap <silent><silent>y "yy <Bar> :call system('xclip', @y)<CR>

" Open file vertically to the right from the netrw explorer
let g:netrw_altv=1

" Status line
set laststatus=2
set statusline=\[%n]\ %f%m%r%h%w\ %=%({%{&ff}\|%{(&fenc==\"\"?&enc:&fenc).((exists(\"+bomb\")\ &&\ &bomb)?\",B\":\"\")}%k\|%Y\|%{&spelllang}}%)\ %([%l,%v][%p%%]\ %)

if &term =~ '256color'
    " disable Background Color Erase (BCE) so that color schemes
    " render properly when inside 256-color tmux and GNU screen.
    " see also http://snk.tuxfamily.org/log/vim-256color-bce.html
    set t_ut=
endif
